{"version":3,"sources":["components/layout/navigationBar.jsx","components/counter.jsx","components/layout/footer.jsx","components/pages/about.jsx","components/pages/products.jsx","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","state","styleNavigationBar","backgroundColor","color","padding","styleDiv","display","justifyContent","styleLi","margin","styleNavigationBarH1","fontSize","marginBottom","userLink","styleNavLinks","textDecoration","styleNavBarSearchForm","borderTop","borderLeft","borderRight","borderBottom","background","width","styleUser","react_default","a","createElement","Fragment","className","style","this","react_router_dom","to","Component","Counter","count","tags","styles","fontWeight","handleIncrement","product","console","log","_this","setState","handleDecrement","handleReset","classes","length","map","tag","key","_this2","onClick","getBadgeClasses","formatCount","id","Footer","footer","alignItems","footerP","About","Products","App","navigationBar","react_router","exact","path","render","props","counter","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4e3ca29.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavigationBar extends Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    styleNavigationBar = {\r\n        backgroundColor: '#000',\r\n        color: '#fff',\r\n        padding: '10px',\r\n    };\r\n\r\n    styleDiv = {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    }\r\n\r\n    styleLi = {\r\n        display: 'inline-block',\r\n        margin: '0 5px'\r\n    }\r\n\r\n    styleNavigationBarH1 = {\r\n        fontSize: '20px',\r\n        marginBottom: '0px'\r\n    }\r\n\r\n    userLink = '#'\r\n\r\n    styleNavLinks = {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        margin: '0 10px',\r\n        color: '#fff',\r\n        textDecoration: 'none',\r\n    }\r\n\r\n    styleNavBarSearchForm = {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        borderTop: 'none',\r\n        borderLeft: 'none',\r\n        borderRight: 'none',\r\n        borderBottom: '1px solid #fff',\r\n        color: '#fff',\r\n        padding: '0px 7px',\r\n        background: 'transparent',\r\n        width: '600px',\r\n        fontSize: '14px',\r\n    }\r\n\r\n    styleUser = {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        color: '#fff',\r\n        textDecoration: 'none',\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className='navigation-bar' style={this.styleNavigationBar}>\r\n                    <div style={this.styleDiv} className='container-fluid'>\r\n                        <h1 style={this.styleNavigationBarH1}>Counter</h1>\r\n                        {/* <form>\r\n                            <input type='text' style={this.styleNavBarSearchForm} />\r\n                        </form> */}\r\n                        <div className='nav-links' style={this.styleNavLinks}>\r\n                            <Link style={this.styleNavLinks} to='/'>Home</Link>\r\n                            <Link style={this.styleNavLinks} to='/products'>Products</Link>\r\n                            <Link style={this.styleNavLinks} to='/about'>About</Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link style={this.styleUser}>User</Link>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavigationBar","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        count: 0,\r\n        tags: ['tag1', 'tag2', 'tag3']\r\n    };\r\n\r\n    styles = {\r\n        fontSize: 12,\r\n        fontWeight: 'bold',\r\n        color: '#fff'\r\n    }\r\n\r\n    // constructor() {\r\n    //     super();\r\n    //     this.handleIncrement = this.handleIncrement.bind(this);\r\n    // }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += this.state.count === 0 ? 'warning' : 'primary';\r\n        return classes;\r\n    }\r\n\r\n    formatCount() {\r\n        const { count } = this.state\r\n        return count === 0 ? 'Zero' : count;\r\n    }\r\n\r\n    handleIncrement = product => {\r\n        console.log(product);\r\n        this.setState({ count: this.state.count + 1 })\r\n    }\r\n\r\n\r\n\r\n    handleDecrement = () => {\r\n        this.setState({ count: this.state.count - 1 })\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({ count: 0 })\r\n    }\r\n\r\n\r\n    renderTags() {\r\n        if (this.state.tags.length === 0) {\r\n            return <p>There are no tags!</p>;\r\n        }\r\n        return <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <header>\r\n                    <h3>Counter</h3>\r\n                </header>\r\n                <div className=\"m-2\">\r\n                    <button onClick={this.handleDecrement} style={{ fontSize: 14 }} className=\"btn btn-secondary btn-sm\">Decrement</button>\r\n                    <span style={this.styles} className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n                    <button onClick={() => this.handleIncrement({id: 1})} style={{ fontSize: 14 }} className=\"btn btn-secondary btn-sm\">Increment</button>\r\n                    <button onClick={this.handleReset} style={{ fontSize: 14 }} className=\"btn btn-danger btn-sm m-2\">Reset</button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Counter;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    footer = {\r\n        background: '#000',\r\n        color: '#fff',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n\r\n    footerP = {\r\n        fontSize: '12px',\r\n        marginBottom: '0px',\r\n        margin: '10px 0',\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <footer style={this.footer}>\r\n                    <div className='footerWrapper'>\r\n                    <p style={this.footerP}>© Copyright 2019 Counter - All Rights Reserved</p>\r\n                    </div>\r\n                </footer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>About Page</h1>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Products extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='container'>\r\n                    <h1>Products</h1>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport NavigationBar from './components/layout/navigationBar'\nimport Counter from './components/counter'\nimport Footer from './components/layout/footer'\n\nimport About from './components/pages/about'\nimport Products from './components/pages/products'\n\nfunction App() {\n  return (\n    <Router>\n    <div className='App'>\n      <div>\n        <NavigationBar />\n        <Route exact path='/' render={props => (\n          <React.Fragment>\n            <Counter />\n          </React.Fragment>\n        )} />\n        <Route path='/about' component={About} />\n        <Route path='/products' component={Products} />\n        <Footer />\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}